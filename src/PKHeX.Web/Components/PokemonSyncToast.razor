@using PKHeX.Web.BackendApi
@implements IDisposable
@inject IMessageService MessageService

@code {

    private int _uploadCount;
    private int _queueSize;
    
    protected override void OnInitialized()
    {
        SyncPokemonWorker.PokemonUploadStarted += HandlePokemonUploadStarted;
        SyncPokemonWorker.PokemonUploaded += HandlePokemonUploaded;
        SyncPokemonWorker.PokemonUploadEnded += HandlePokemonUploadEnded;
    }

    private Task HandlePokemonUploadStarted(PokemonUploadStartedArgs arg)
    {
        _queueSize = arg.QueueSize;
        
        _ = MessageService.Loading(new MessageConfig
        {
            // todo: add link to see the queue
            Content = "Synchronizing...",
            Key = "pokemon-sync-toast",
            Duration = 5
        });

        return Task.CompletedTask;
    }

    private Task HandlePokemonUploaded(PokemonUploadedArgs arg)
    {
        _uploadCount++;
        return Task.CompletedTask;
    }
    
    private Task HandlePokemonUploadEnded(EventArgs arg)
    {
        _queueSize = 0;
        _uploadCount = 0;
        
        _ = MessageService.Success(new MessageConfig
        {
            Content = "Synchronizing completed",
            Key = "pokemon-sync-toast",
            Duration = 3
        });

        return Task.CompletedTask;
    }

    public void Dispose()
    {
        SyncPokemonWorker.PokemonUploaded -= HandlePokemonUploaded;
        SyncPokemonWorker.PokemonUploadStarted -= HandlePokemonUploadStarted;
        SyncPokemonWorker.PokemonUploadEnded -= HandlePokemonUploadEnded;
    }

}