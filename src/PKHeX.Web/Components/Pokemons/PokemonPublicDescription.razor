@using PKHeX.Facade.Repositories
@using PKHeX.Web.BackendApi.Representation
@using Gender = PKHeX.Facade.Gender

<Flex Style="gap: 20px; width: 100%" Direction="FlexDirection.Vertical" Wrap="FlexWrap.Wrap">
    <ResponsibleDescriptions
        Bordered
        Size="DescriptionsSize.Small"
        Style="width: 100%">

        <TitleTemplate>
            Descriptions
        </TitleTemplate>

        <ChildContent>
            <DescriptionsItem Title="Species">
                @_species.Name
            </DescriptionsItem>

            <DescriptionsItem Title="Types">
                <PokemonTypeImage Types="Pokemon.Types.Tuple" Index="PokemonTypeImage.TypeIndex.Primary"/>

                @if (Pokemon.Types.Type1 != Pokemon.Types.Type2)
                {
                    <PokemonTypeImage Types="Pokemon.Types.Tuple" Index="PokemonTypeImage.TypeIndex.Secondary"/>
                }
            </DescriptionsItem>
            <DescriptionsItem Title="PID">
                (hidden)
            </DescriptionsItem>
            <DescriptionsItem Title="Nickname">
                @Pokemon.Nickname
            </DescriptionsItem>
            <DescriptionsItem Title="Gender">
                <GenderSelector
                    Gender="@_gender"
                    Disabled/>
            </DescriptionsItem>
            <DescriptionsItem Title="Shiny">
                <Switch Value="@Pokemon.IsShiny" Disabled/>
            </DescriptionsItem>
            <DescriptionsItem Title="Level">
                @Pokemon.Level
            </DescriptionsItem>
            <DescriptionsItem Title="Nature">
                <NatureSelect
                    SelectedNature="Pokemon.Nature"
                    Disabled/>
            </DescriptionsItem>
            @if (!string.IsNullOrWhiteSpace(_form?.Name))
            {
                <DescriptionsItem Title="Form">
                    @_form.Name
                </DescriptionsItem>
            }
            @if (_heldItem is not null)
            {
                <DescriptionsItem Title="Held Item">
                    @_heldItem.Name
                </DescriptionsItem>
            }
            <DescriptionsItem Title="Ability">
                <AbilitySelect
                    SelectedAbilityId="_ability.Id"
                    Disabled/>
            </DescriptionsItem>

            <DescriptionsItem Title="Egg">
                <Switch Value="Pokemon.Egg.IsEgg" Disabled/>
            </DescriptionsItem>

            @if (Pokemon.Egg.IsEgg)
            {
                <DescriptionsItem>
                    <TitleTemplate>
                        Hatch Counter
                    </TitleTemplate>
                    <ChildContent>
                        <AntDesign.InputNumber
                            TValue="int"
                            Disabled="true"
                            Value="@(Pokemon.Egg.HatchCounter ?? 1)"
                            DefaultValue="1"/>
                    </ChildContent>
                </DescriptionsItem>
            }

            <DescriptionsItem Title="Infected">
                <Switch Disabled Value="Pokemon.Flags.IsInfected"/>
            </DescriptionsItem>
            <DescriptionsItem Title="Cured">
                <Switch Disabled Value="Pokemon.Flags.IsCured"/>
            </DescriptionsItem>
        </ChildContent>
    </ResponsibleDescriptions>
</Flex>

@code {
    [Parameter] public required PokemonPublicMetadataRepresentation Pokemon { get; set; }

    private SpeciesDefinition _species = default!;
    private Gender _gender = default!;
    private ItemDefinition? _heldItem;
    private AbilityDefinition _ability = default!;
    private FormDefinition? _form;

    protected override void OnInitialized()
    {
        _species = SpeciesRepository.All[Pokemon.Species];
        _ability = AbilityRepository.Instance.Get((int)Pokemon.Ability);
        _gender = Pokemon.Gender.ToGender();
        _heldItem = Pokemon.HeldItem is null
            ? null
            : ItemRepository.GetItem(Pokemon.HeldItem.Id);

        var forms = FormRepository.GetFor(Pokemon.Species, Pokemon.Generation);
        _form = forms.FirstOrDefault(f => f.Id == Pokemon.Form.Id);
    }

}